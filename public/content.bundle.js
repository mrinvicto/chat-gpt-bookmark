(()=>{"use strict";const e={getBookmarks(){const e=localStorage.getItem("chatGPTBookmarks");return e?JSON.parse(e):[]},saveBookmark(e){const t=this.getBookmarks();t.push(e),localStorage.setItem("chatGPTBookmarks",JSON.stringify(t))},bookmarkExists(e){return this.getBookmarks().some((t=>t.url===e))},getLocalBookmarkLink(){const e=sessionStorage.getItem("localBookmarkLink");return e?JSON.parse(e):null},setLocalBookmarkLink(e){sessionStorage.setItem("localBookmarkLink",JSON.stringify(e))},removeBookmark(e){const t=this.getBookmarks().filter((t=>t.url!==e));localStorage.setItem("chatGPTBookmarks",JSON.stringify(t))}},t={findGroupsInSidebar:()=>document.querySelectorAll('div[class*="group/sidebar"]'),findMenuElement:()=>document.querySelector('div[role="menu"]'),findExistingMenuItem:e=>e?.querySelector('[role="menuitem"]'),createBookmarkDiv(e){const t=e.cloneNode(!0);return t.id="bookmark-convo-option",t.textContent="🔖 Bookmark",t},findBookmarkContainer:e=>Array.from(e.querySelectorAll("div.bg-token-sidebar-surface-primary"))[1],createBookmarksContainer(){const e=document.createElement("div");return e.id="inserted-div-id",e},removeBookmarkList(){const e=document.getElementById("inserted-div-id");e&&e.remove()}},o={generateBookmarkHTML:e=>`\n            <li class="relative" data-testid="history-item-3">\n                <div draggable="true" class="no-draggable group rounded-lg active:opacity-90 bg-[var(--item-background-color)] h-9 text-sm screen-arch:bg-transparent relative flex items-center justify-between" style="--item-background-color: var(--sidebar-surface-primary);">\n                    <a class="motion-safe:group-active:screen-arch:scale-[98%] motion-safe:group-active:screen-arch:transition-transform motion-safe:group-active:screen-arch:duration-100 flex items-center gap-2 p-2 flex-grow" data-history-item-link="true" href="${e.url}" data-discover="true" style="mask-image: var(--sidebar-mask);">\n                        <div class="relative grow overflow-hidden whitespace-nowrap" dir="auto" title="${e.title}">${e.title}</div>\n                    </a>\n                    <button class="delete-bookmark ml-auto hover:text-red-500 transition-colors" data-url="${e.url}" title="Delete bookmark">\n                        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">\n                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"/>\n                            <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"/>\n                        </svg>\n                    </button>\n                </div>\n            </li>\n        `,generateBookmarksListHTML(){return e.getBookmarks().map(this.generateBookmarkHTML).join("")},createBookmarksSection(){return`\n            <div class="relative mt-5 first:mt-0 last:mb-5">\n                <div class="bg-token-sidebar-surface-primary sticky top-0 z-20">\n                    <span class="flex h-9 items-center">\n                        <h3 class="px-2 text-xs font-semibold text-ellipsis overflow-hidden break-all pt-3 pb-2 text-token-text-primary">Bookmarks</h3>\n                    </span>\n                </div>\n                <ol>\n                    ${this.generateBookmarksListHTML()}    \n                </ol>\n            </div>\n        `},handleBookmarkClick(){const o=e.getLocalBookmarkLink();if(!o)return void alert("No bookmark link found");const{url:r,title:a}=o;e.bookmarkExists(r)?alert(`✅ Already bookmarked: ${a}`):(e.saveBookmark(o),alert(`🔖 Bookmarked: ${a}`),t.removeBookmarkList())},handleDeleteBookmark(o){o.preventDefault(),o.stopPropagation();const r=o.target,a=r.closest("button")?.dataset.url;a&&(e.removeBookmark(a),t.removeBookmarkList())}};new MutationObserver((()=>{(()=>{const e=t.findMenuElement();if(!e)return;if(document.getElementById("bookmark-convo-option"))return;const r=t.findExistingMenuItem(e);if(!r)return;const a=t.createBookmarkDiv(r);a.onclick=o.handleBookmarkClick;const n=r.parentNode;n&&n.appendChild(a)})(),document.querySelectorAll(".delete-bookmark").forEach((e=>{e.removeEventListener("click",o.handleDeleteBookmark),e.addEventListener("click",o.handleDeleteBookmark)})),t.findGroupsInSidebar().forEach((e=>{const r=t.findBookmarkContainer(e);if(!r)return void console.error("❌ Target container not found.");if(document.getElementById("inserted-div-id"))return;const a=r.parentElement?.parentElement;if(!a)return void console.error("❌ Grandparent element is not available.");const n=a.parentElement;if(!n)return void console.error("❌ Grandparent's parent is not available.");const i=t.createBookmarksContainer();i.innerHTML=o.createBookmarksSection(),n.insertBefore(i,a)}))})).observe(document.body,{childList:!0,subtree:!0}),document.body.addEventListener("click",(t=>{const o=t.target;if(!o)return;const r=o.closest("button");if(!r)return;const a=r.closest("li");if(!a)return;const n=a.querySelector("a");if(n&&n.href){const t=n.childNodes[0];e.setLocalBookmarkLink({url:n.href,title:t.innerText})}}))})();